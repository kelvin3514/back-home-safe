{"version":3,"sources":["assets/back.svg","components/Header.tsx","utils/clearAllData.ts","containers/MainScreen/index.tsx","containers/MainScreen/Home.tsx","containers/MainScreen/Settings.tsx","assets/incognito.svg","containers/MainScreen/TravelRecord.tsx"],"names":["Header","name","backPath","Wrapper","to","BackButton","src","back","styled","img","div","clearAllData","deleteAllCookiesFactory","window","sessionStorage","clear","localStorage","location","reload","tabs","Home","t","useTranslation","useState","place","setPlace","license","setLicense","browserHistory","useHistory","useTravelRecord","createTravelRecord","currentTravelRecord","currentTime","useTime","today","useMemo","format","Welcome","Title","Slider","StyledCard","CardContent","Typography","color","gutterBottom","StyledPlace","value","onChange","placeholder","readOnly","isNil","CardActions","Button","size","disabled","isEmpty","trim","onClick","nameZh","type","travelRecordType","PLACE","inputType","travelRecordInputType","MANUALLY","inTime","dayjs","toISOString","push","pathname","venueId","TAXI","ContentWrapper","Card","Place","Settings","hasCameraSupport","useCamera","incognito","setIncognito","languageOpen","setLanguageOpen","useI18n","language","setLanguage","PageWrapper","StyledList","subheader","ListSubheader","StyledLink","ListItem","button","ListItemText","primary","secondary","ListItemSecondaryAction","Switch","checked","e","target","Collapse","in","timeout","unmountOnExit","RadioGroup","aria-label","event","FormControlLabel","languageType","control","Radio","label","EN","Divider","packageJson","version","StyledExternalLink","href","Link","a","List","TravelRecord","travelRecord","removeTravelRecord","component","Msg","IncognitoIcon","incognitoIcon","map","item","index","getVenueName","Fragment","ListItemIcon","outTime","IconButton","edge","MainScreen","activePage","setActivePage","isLeaveModalOpen","setIsLeaveModalOpen","updateCurrentTravelRecord","key","HOME","icon","TRAVEL_RECORD","SETTINGS","tabsArr","NavWrapper","BottomNavigation","showLabels","newValue","BottomNavigationAction","FloatingButton","Fab","variant","LeaveModal","visible","onDiscard","onFinish","date","startOf"],"mappings":"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","file":"static/js/11.ce2c7c4c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/back.7bf7a56f.svg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport back from \"../assets/back.svg\";\n\ntype Props = {\n  name: string;\n  backPath?: string;\n};\n\nexport const Header = ({ name, backPath }: Props) => {\n  return (\n    <Wrapper>\n      {backPath && (\n        <Link to={backPath}>\n          <BackButton src={back} />\n        </Link>\n      )}\n      {name}\n    </Wrapper>\n  );\n};\n\nconst BackButton = styled.img`\n  height: 20px;\n  top: 14px;\n  left: 16px;\n  position: absolute;\n`;\n\nconst Wrapper = styled.div`\n  color: #ffffff;\n  background-color: #12b188;\n  text-align: center;\n  line-height: 48px;\n  text-shadow: 0px 1px 2px rgba(0, 0, 0, 0.8);\n  flex-shrink: 0;\n`;\n","import deleteAllCookiesFactory from \"delete-all-cookies\";\n\nexport const clearAllData = () => {\n  deleteAllCookiesFactory(window)();\n  window.sessionStorage.clear();\n  window.localStorage.clear();\n  window.location.reload();\n};\n","import { BottomNavigation, BottomNavigationAction } from \"@material-ui/core\";\nimport { Fab } from \"@material-ui/core\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport PlaceIcon from \"@material-ui/icons/Place\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport { Dayjs } from \"dayjs\";\nimport { TFunction } from \"i18next\";\nimport React, { useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\n\nimport { LeaveModal } from \"../../components/LeaveModal\";\nimport { useTravelRecord } from \"../../hooks/useTravelRecord\";\nimport { Home } from \"./Home\";\nimport { Settings } from \"./Settings\";\nimport { TravelRecord } from \"./TravelRecord\";\n\nenum tabs {\n  HOME = \"HOME\",\n  TRAVEL_RECORD = \"TRAVEL_RECORD\",\n  SETTINGS = \"SETTINGS\",\n}\n\nconst tabsArr = ({ t }: { t: TFunction }) => [\n  {\n    key: tabs.HOME,\n    label: t(\"home.name\"),\n    component: <Home />,\n    icon: <HomeIcon />,\n  },\n  {\n    key: tabs.TRAVEL_RECORD,\n    label: t(\"travel_record.name\"),\n    component: <TravelRecord />,\n    icon: <PlaceIcon />,\n  },\n  {\n    key: tabs.SETTINGS,\n    label: t(\"setting.name\"),\n    component: <Settings />,\n    icon: <SettingsIcon />,\n  },\n];\n\nconst MainScreen = () => {\n  const { t } = useTranslation(\"main_screen\");\n  const [activePage, setActivePage] = useState(0);\n  const [isLeaveModalOpen, setIsLeaveModalOpen] = useState(false);\n\n  const { currentTravelRecord, updateCurrentTravelRecord } = useTravelRecord();\n  const tabs = useMemo(() => tabsArr({ t }), [t]);\n\n  const { component } = useMemo(() => tabs[activePage] || {}, [\n    activePage,\n    tabs,\n  ]);\n\n  const handleLeave = (date: Dayjs) => {\n    updateCurrentTravelRecord({\n      outTime: date.startOf(\"minute\").toISOString(),\n    });\n    setIsLeaveModalOpen(false);\n  };\n\n  return (\n    <PageWrapper>\n      {component}\n      <NavWrapper>\n        <BottomNavigation\n          showLabels\n          value={activePage}\n          onChange={(event, newValue) => {\n            setActivePage(newValue);\n          }}\n        >\n          {tabs.map(({ key, label, icon }) => (\n            <BottomNavigationAction key={key} label={label} icon={icon} />\n          ))}\n        </BottomNavigation>\n      </NavWrapper>\n      {currentTravelRecord && (\n        <>\n          <FloatingButton>\n            <Fab\n              variant=\"extended\"\n              color=\"secondary\"\n              onClick={() => {\n                setIsLeaveModalOpen(true);\n              }}\n            >\n              <ExitToAppIcon />\n              {t(\"global:button.leave\")}\n            </Fab>\n          </FloatingButton>\n          <LeaveModal\n            visible={isLeaveModalOpen}\n            onDiscard={() => {\n              setIsLeaveModalOpen(false);\n            }}\n            onFinish={handleLeave}\n          />\n        </>\n      )}\n    </PageWrapper>\n  );\n};\n\nexport default MainScreen;\n\nconst PageWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst FloatingButton = styled.div`\n  position: absolute;\n  z-index: 1000;\n  bottom: 80px;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  pointer-events: none;\n\n  & button {\n    pointer-events: all;\n  }\n`;\n\nconst NavWrapper = styled.div`\n  flex-shrink: 0;\n  box-shadow: 0 0 3.6px 0 rgb(0 0 0 / 13%), 0 0 0.9px 0 rgb(0 0 0 / 11%);\n  padding-bottom: 8px;\n  background-color: #fff;\n`;\n","import {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Typography,\n} from \"@material-ui/core\";\nimport { isEmpty, isNil, trim } from \"ramda\";\nimport React, { useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { Place } from \"../../components/Place\";\nimport { useTime } from \"../../hooks/useTime\";\nimport {\n  travelRecordInputType,\n  travelRecordType,\n  useTravelRecord,\n} from \"../../hooks/useTravelRecord\";\nimport { dayjs } from \"../../utils/dayjs\";\n\nexport const Home = () => {\n  const { t } = useTranslation(\"main_screen\");\n  const [place, setPlace] = useState(\"\");\n  const [license, setLicense] = useState(\"\");\n\n  const browserHistory = useHistory();\n  const { createTravelRecord, currentTravelRecord } = useTravelRecord();\n  const { currentTime } = useTime();\n\n  const today = useMemo(() => {\n    return currentTime.format(\"YYYY-MM-DD, dddd\");\n  }, [currentTime]);\n\n  const handlePlaceSubmit = () => {\n    createTravelRecord({\n      nameZh: place,\n      type: travelRecordType.PLACE,\n      inputType: travelRecordInputType.MANUALLY,\n      inTime: dayjs().toISOString(),\n    });\n\n    browserHistory.push({ pathname: \"/confirm\" });\n  };\n\n  const handleTaxiSubmit = () => {\n    createTravelRecord({\n      venueId: license,\n      type: travelRecordType.TAXI,\n      inputType: travelRecordInputType.MANUALLY,\n      inTime: dayjs().toISOString(),\n    });\n\n    browserHistory.push({ pathname: \"/confirm\" });\n  };\n\n  return (\n    <>\n      <Welcome>\n        <Title>\n          <div>{today}</div>\n          <h2>{t(\"home.record_your_visit\")}</h2>\n        </Title>\n        <Slider>\n          <StyledCard>\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom>\n                {t(\"home.form.venue_name.label\")}\n              </Typography>\n              <StyledPlace\n                value={place}\n                onChange={setPlace}\n                placeholder={t(\"home.form.venue_name.placeholder\")}\n                readOnly={!isNil(currentTravelRecord)}\n              />\n            </CardContent>\n            <CardActions>\n              <Button\n                size=\"small\"\n                color=\"primary\"\n                disabled={isEmpty(trim(place)) || !isNil(currentTravelRecord)}\n                onClick={handlePlaceSubmit}\n              >\n                {t(\"home.button.go\")}\n              </Button>\n              {isNil(currentTravelRecord) ? (\n                <Link to=\"/qrReader\">\n                  <Button size=\"small\" color=\"primary\">\n                    {t(\"home.button.scan_qr_code\")}\n                  </Button>\n                </Link>\n              ) : (\n                <Button size=\"small\" color=\"primary\" disabled>\n                  {t(\"home.button.scan_qr_code\")}\n                </Button>\n              )}\n            </CardActions>\n          </StyledCard>\n          <StyledCard>\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom>\n                {t(\"home.form.taxi.label\")}\n              </Typography>\n              <StyledPlace\n                value={license}\n                onChange={setLicense}\n                placeholder={t(\"home.form.taxi.placeholder\")}\n                readOnly={!isNil(currentTravelRecord)}\n              />\n            </CardContent>\n            <CardActions>\n              <Button\n                size=\"small\"\n                color=\"primary\"\n                disabled={isEmpty(trim(license)) || !isNil(currentTravelRecord)}\n                onClick={handleTaxiSubmit}\n              >\n                {t(\"home.button.ride\")}\n              </Button>\n            </CardActions>\n          </StyledCard>\n        </Slider>\n      </Welcome>\n      <ContentWrapper />\n    </>\n  );\n};\n\nconst Welcome = styled.div`\n  color: #fff;\n  padding: 40px 24px 32px 24px;\n`;\n\nconst Title = styled.div`\n  text-shadow: 0px 1px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst StyledCard = styled(Card)`\n  box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.8);\n  min-width: 80vw;\n`;\n\nconst Slider = styled.div`\n  position: absolute;\n  display: flex;\n  overflow: auto;\n  width: 100%;\n  left: 0;\n  padding: 16px 0;\n\n  &::before {\n    content: \"\";\n    flex: 0 0 24px;\n  }\n\n  &::after {\n    content: \"\";\n    flex: 0 0 24px;\n  }\n\n  & ${StyledCard}:not(:last-child) {\n    margin-right: 16px;\n  }\n`;\n\nconst StyledPlace = styled(Place)`\n  text-align: left;\n`;\n\nconst ContentWrapper = styled.div`\n  background-color: #fff;\n  height: 100%;\n  overflow: auto;\n`;\n","import {\n  Collapse,\n  Divider,\n  FormControlLabel,\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n  ListSubheader,\n  Radio,\n  RadioGroup,\n  Switch,\n} from \"@material-ui/core\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport packageJson from \"../../../package.json\";\nimport { Header } from \"../../components/Header\";\nimport { languageType } from \"../../constants/languageType\";\nimport { useCamera } from \"../../hooks/useCamera\";\nimport { useI18n } from \"../../hooks/useI18n\";\nimport { useTravelRecord } from \"../../hooks/useTravelRecord\";\nimport { clearAllData } from \"../../utils/clearAllData\";\n\nexport const Settings = () => {\n  const { t } = useTranslation(\"main_screen\");\n  const { hasCameraSupport } = useCamera();\n  const { incognito, setIncognito } = useTravelRecord();\n  const [languageOpen, setLanguageOpen] = useState(false);\n  const { language, setLanguage } = useI18n();\n\n  const handleLanguageClick = () => {\n    setLanguageOpen(!languageOpen);\n  };\n\n  return (\n    <PageWrapper>\n      <Header name={t(\"setting.name\")} />\n      <ContentWrapper>\n        <StyledList\n          subheader={\n            <ListSubheader>{t(\"setting.section.common\")}</ListSubheader>\n          }\n        >\n          {hasCameraSupport ? (\n            <StyledLink to=\"/cameraSetting\">\n              <ListItem button>\n                <ListItemText primary={t(\"setting.item.camera_setting\")} />\n              </ListItem>\n            </StyledLink>\n          ) : (\n            <ListItem button disabled>\n              <ListItemText primary={t(\"setting.item.camera_setting\")} />\n            </ListItem>\n          )}\n          <StyledLink to=\"/confirmPageIcon\">\n            <ListItem button>\n              <ListItemText\n                primary={t(\"setting.item.confirm_page_icon_setting\")}\n              />\n            </ListItem>\n          </StyledLink>\n          <ListItem>\n            <ListItemText\n              primary={t(\"setting.item.incognito_mode.name\")}\n              secondary={t(\"setting.item.incognito_mode.explanation\")}\n            />\n            <ListItemSecondaryAction>\n              <Switch\n                checked={incognito}\n                onChange={(e) => {\n                  setIncognito(e.target.checked);\n                }}\n                color=\"primary\"\n              />\n            </ListItemSecondaryAction>\n          </ListItem>\n          <ListItem button onClick={handleLanguageClick}>\n            <ListItemText primary={t(\"setting.item.language\")} />\n            {languageOpen ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={languageOpen} timeout=\"auto\" unmountOnExit>\n            <ListItem>\n              <RadioGroup\n                aria-label=\"language\"\n                name=\"language\"\n                value={language}\n                onChange={(event) => {\n                  setLanguage(event.target.value as languageType);\n                }}\n              >\n                <FormControlLabel\n                  value={languageType[\"ZH-HK\"]}\n                  control={<Radio />}\n                  label=\"繁體中文\"\n                />\n                <FormControlLabel\n                  value={languageType.EN}\n                  control={<Radio />}\n                  label=\"English\"\n                />\n              </RadioGroup>\n            </ListItem>\n          </Collapse>\n        </StyledList>\n        <Divider />\n        <StyledList\n          subheader={<ListSubheader>{t(\"setting.section.lab\")}</ListSubheader>}\n        >\n          <StyledLink to=\"/qrGenerator\">\n            <ListItem button>\n              <ListItemText primary={t(\"setting.item.qr_generator\")} />\n            </ListItem>\n          </StyledLink>\n          <ListItem button>\n            <ListItemText\n              primary={t(\"setting.item.reset\")}\n              onClick={clearAllData}\n            />\n          </ListItem>\n        </StyledList>\n        <Divider />\n        <StyledList\n          subheader={\n            <ListSubheader>\n              {t(\"setting.section.version\")}: {packageJson.version}\n            </ListSubheader>\n          }\n        >\n          <StyledExternalLink\n            href=\"https://gitlab.com/codogo-b/back-home-safe\"\n            target=\"_blank\"\n          >\n            <ListItem button>\n              <ListItemText primary={t(\"setting.item.about_us\")} />\n            </ListItem>\n          </StyledExternalLink>\n          <StyledLink to=\"/disclaimer\">\n            <ListItem button>\n              <ListItemText primary={t(\"setting.item.disclaimer\")} />\n            </ListItem>\n          </StyledLink>\n          <StyledExternalLink\n            href=\"https://gitlab.com/codogo-b/back-home-safe/-/blob/master/CHANGELOG.md\"\n            target=\"_blank\"\n          >\n            <ListItem button>\n              <ListItemText primary={t(\"setting.item.change_log\")} />\n            </ListItem>\n          </StyledExternalLink>\n          <StyledExternalLink\n            href=\"https://gitlab.com/codogo-b/back-home-safe/-/issues\"\n            target=\"_blank\"\n          >\n            <ListItem button>\n              <ListItemText primary={t(\"setting.item.report_issue\")} />\n            </ListItem>\n          </StyledExternalLink>\n        </StyledList>\n      </ContentWrapper>\n    </PageWrapper>\n  );\n};\n\nconst PageWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  background-color: #fff;\n  overflow: auto;\n`;\n\nconst ContentWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n`;\n\nconst StyledLink = styled(Link)`\n  color: unset;\n`;\n\nconst StyledExternalLink = styled.a`\n  color: unset;\n`;\n\nconst StyledList = styled(List)`\n  background-color: #fff;\n`;\n","export default __webpack_public_path__ + \"static/media/incognito.8dc7be75.svg\";","import {\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport LocalTaxiIcon from \"@material-ui/icons/LocalTaxi\";\nimport StoreIcon from \"@material-ui/icons/Store\";\nimport dayjs from \"dayjs\";\nimport { isEmpty } from \"ramda\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\n\nimport incognitoIcon from \"../../assets/incognito.svg\";\nimport { Header } from \"../../components/Header\";\nimport { useI18n } from \"../../hooks/useI18n\";\nimport { travelRecordType, useTravelRecord } from \"../../hooks/useTravelRecord\";\nimport { getVenueName } from \"../../utils/qr\";\n\nexport const TravelRecord = () => {\n  const { t } = useTranslation(\"main_screen\");\n  const { travelRecord, removeTravelRecord, incognito } = useTravelRecord();\n  const { language } = useI18n();\n\n  return (\n    <PageWrapper>\n      <Header name={t(\"travel_record.name\")} />\n      <ContentWrapper>\n        <List component=\"nav\">\n          {incognito && (\n            <Msg>\n              <IncognitoIcon src={incognitoIcon} />\n              {t(\"travel_record.message.incognito_activated\")}\n            </Msg>\n          )}\n          {isEmpty(travelRecord) && (\n            <Msg>{t(\"travel_record.message.empty\")}</Msg>\n          )}\n          {travelRecord.map((item, index) => {\n            const name = getVenueName(item, language);\n            return (\n              <React.Fragment key={index}>\n                <ListItem>\n                  <ListItemIcon>\n                    {item.type === travelRecordType.TAXI ? (\n                      <LocalTaxiIcon />\n                    ) : (\n                      <StoreIcon />\n                    )}\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={name}\n                    secondary={`${dayjs(item.inTime).format(\n                      \"YYYY-MM-DD HH:mm\"\n                    )} - ${\n                      item.outTime\n                        ? dayjs(item.outTime).format(\"YYYY-MM-DD HH:mm\")\n                        : \"\"\n                    }`}\n                  />\n                  <ListItemSecondaryAction>\n                    <IconButton\n                      edge=\"end\"\n                      aria-label=\"delete\"\n                      onClick={() => {\n                        removeTravelRecord(index);\n                      }}\n                      disabled={incognito}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n                <Divider />\n              </React.Fragment>\n            );\n          })}\n        </List>\n      </ContentWrapper>\n    </PageWrapper>\n  );\n};\n\nconst PageWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  background-color: #fff;\n  overflow: auto;\n`;\n\nconst ContentWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n`;\n\nconst Msg = styled.div`\n  text-align: center;\n  color: rgba(0, 0, 0, 0.54);\n  font-size: 0.875rem;\n  line-height: 48px;\n`;\n\nconst IncognitoIcon = styled.img`\n  display: block;\n  width: 24px;\n  margin: 8px auto 0 auto;\n`;\n"],"sourceRoot":""}