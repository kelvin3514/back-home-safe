{"version":3,"sources":["assets/cross.svg","hooks/useCamera.ts","components/Place.tsx","assets/tick.svg","assets/checkbox.svg","assets/checkboxChecked.svg","components/CheckBox.tsx","assets/greenTick.svg","containers/Confirm/AutoLeaveModal.tsx","containers/Confirm/index.tsx","components/LeaveModal/Prompt.tsx","components/DatePicker.tsx","components/LeaveModal/TimePickModal.tsx","components/LeaveModal/index.tsx","hooks/useTravelRecord.ts","hooks/useEncryptedStore.ts","utils/dayjs.ts","constants/languageType.ts","locales/english/index.ts","locales/traditionalChinese/index.ts","locales/index.ts","components/AnimatedSwitch.tsx","components/PageLoading.tsx","App.tsx","serviceWorkerRegistration.ts","index.tsx","components/Button.tsx","hooks/useTime.ts","hooks/useI18n.ts","assets/crossBlack.svg","utils/qr.ts"],"names":["constate","useState","navigator","hasCameraSupport","useLocalStorage","preferredCameraId","setPreferredCameraId","cameraList","setCameraList","initCameraList","useCallback","a","hasIn","mediaDevices","enumerateDevices","deviceList","filter","device","kind","alert","useEffect","any","deviceId","UseCameraProvider","useCamera","Place","value","onChange","placeholder","readOnly","rest","StyledInput","e","target","async","styled","TextareaAutosize","CheckBox","checked","handleClick","isAndroid","StyledCheckbox","onClick","color","IOSCheckBox","src","checkboxChecked","checkbox","undefined","img","Checkbox","AutoLeaveModal","isModalOpen","onCancel","onConfirm","selectedAutoLeaveHour","date","t","useTranslation","autoLeaveHourTmp","setAutoLeaveHourTmp","toDate","useMemo","add","isOpen","onRequestClose","style","overlay","backgroundColor","content","outline","border","padding","borderRadius","width","position","top","left","transform","height","overflow","ariaHideApp","CrossWrapper","Cross","crossBlack","Title","HourListWrapper","id","HourList","map","hour","HourListItem","SelectedTick","greenTick","TimeWrapper","time","format","div","h1","ul","li","Confirm","currentTravelRecord","confirmPageIcon","browserHistory","useHistory","updateCurrentTravelRecord","useTravelRecord","autoLeave","setAutoLeave","autoLeaveHour","setAutoLeaveHour","isAutoLeaveModalOpen","setIsAutoLeaveModalOpen","isLeaveModalOpen","setIsLeaveModalOpen","language","useI18n","push","dayjs","place","getVenueName","outTime","toISOString","venueType","propOr","travelRecordType","PLACE","PageWrapper","Header","Logo","cross","to","MessageWrapper","TAXI","Msg","License","PlaceWrapper","Time","TickWrapper","TickWrapperInner","Tick","tick","ActionGroup","AutoLeave","CheckBoxWrapper","Change","shadowed","LeaveMessage","LeaveModal","visible","onDiscard","onFinish","startOf","Prompt","onLeaveNow","onLeaved","heightBase","GreenButton","ModalConfirmButton","DatePicker","forwardRef","props","ref","pickerInstance","setPickerInstance","useImperativeHandle","init","ele","document","querySelector","Picker","inline","rows","pick","console","log","getValue","getDate","Wrapper","className","TimePickModal","currentTime","useTime","datePickerRef","useRef","showPastDateError","setShowPastDateError","showFutureDateError","setShowFutureDateError","onAfterOpen","current","TimePickerWrapper","leaveDate","Date","leaveDateDayJs","isBefore","isAfter","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","elevation","variant","severity","isTimePickModalOpen","setIsTimePickModalOpen","inTime","travelRecordInputType","encryptValue","input","password","AES","encrypt","toString","useEncryptedStore","key","fallbackValue","defaultValue","incognito","setIncognito","setPassword","JSON","stringify","savedValue","setSavedValue","removePasswordHash","decryptedValue","setDecryptedValue","isEncrypted","parse","unlocked","isNil","useMount","useUpdateEffect","initPassword","newPassword","data","unlockStore","decrypt","enc","Utf8","decryptValue","lockStore","setValue","unlockTravelRecord","lockTravelRecord","travelRecord","setTravelRecord","encryptTravelRecord","getCurrentTravelRecord","records","firstItem","head","createTravelRecord","record","prev","currentRecord","tail","removeTravelRecord","index","remove","UseTravelRecordProvider","_","locale","i18n","toLowerCase","languageType","locals","global","tutorial","main_screen","mainScreen","qr_reader","qrReader","qr_generator","qrGenerator","login","disclaimer","confirm_page_icon","confirm","camera_setting","cameraSetting","use","initReactI18next","resources","traditionalChinese","english","lng","fallbackLng","interpolation","escapeValue","debug","AnimatedSwitch","StyledSwitch","atEnter","opacity","offset","zIndex","atLeave","atActive","val","spring","stiffness","damping","mapStyles","styles","runOnMount","Switch","PageLoading","showLoadingIndicator","setLoadingIndicatorVisibility","timer","setTimeout","clearTimeout","FixWrapper","CircularProgress","QRGenerator","React","lazy","QRReader","CameraSetting","Tutorial","MainScreen","Disclaimer","Login","ConfirmPageIconSetting","App","finishedTutorial","setFinishedTutorial","setConfirmPageIcon","pathname","useLocation","handleBlur","adapter","browserDetails","browser","version","window","addEventListener","removeEventListener","fallback","GlobalStyle","exact","path","createGlobalStyle","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","theme","createMuiTheme","palette","primary","main","teal","secondary","yellow","ReactDOM","render","StrictMode","basename","ThemeProvider","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","ConfirmButton","button","disabled","setCurrentTime","useHarmonicIntervalFn","UseTimeProvider","setLanguage","changeLanguage","UseI18nProvider","qrDecode","startsWith","venueId","substring","computedHash","getHash","base64Data","json","decodeURIComponent","escape","atob","decodedData","hashMatch","hash","decodedJson","trimmedZhName","trim","trimmedEnName","chineseName","isEmpty","englishName","EN","string","SHA256","qrEncode","typeEn","typeZh","nameEn","nameZh","type","venueCode","venueID","metadata","btoa","unescape","encodeURIComponent"],"mappings":"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","file":"static/js/main.0e1e9037.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cross.d2bbc7f7.svg\";","import constate from \"constate\";\nimport { any, hasIn } from \"ramda\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useLocalStorage } from \"react-use\";\n\nexport const [UseCameraProvider, useCamera] = constate(() => {\n  const [hasCameraSupport] = useState(\"mediaDevices\" in navigator);\n\n  const [preferredCameraId, setPreferredCameraId] = useLocalStorage(\n    \"preferred_camera_id\",\n    \"AUTO\"\n  );\n  const [cameraList, setCameraList] = useState<InputDeviceInfo[] | null>(null);\n\n  const initCameraList = useCallback(async () => {\n    try {\n      if (\n        !hasCameraSupport ||\n        !hasIn(\"enumerateDevices\", navigator.mediaDevices)\n      ) {\n        setCameraList([]);\n        return;\n      }\n\n      const deviceList = await navigator.mediaDevices.enumerateDevices();\n\n      const cameraList = deviceList.filter<InputDeviceInfo>(\n        (device): device is InputDeviceInfo => device.kind === \"videoinput\"\n      );\n\n      setCameraList(cameraList);\n    } catch (e) {\n      alert(\"Unable to list device.\\n\\n\" + e);\n    }\n  }, [hasCameraSupport]);\n\n  useEffect(() => {\n    initCameraList();\n  }, [hasCameraSupport, initCameraList]);\n\n  useEffect(() => {\n    if (\n      cameraList !== null &&\n      preferredCameraId !== \"AUTO\" &&\n      !any(({ deviceId }) => deviceId === preferredCameraId, cameraList)\n    ) {\n      setPreferredCameraId(\"AUTO\");\n    }\n  }, [cameraList, setPreferredCameraId, preferredCameraId]);\n\n  return {\n    preferredCameraId: !any(\n      ({ deviceId }) => deviceId === preferredCameraId,\n      cameraList || []\n    )\n      ? \"AUTO\"\n      : preferredCameraId,\n    cameraList: cameraList || [],\n    setPreferredCameraId,\n    hasCameraSupport,\n  };\n});\n","import styled from \"styled-components\";\nimport React from \"react\";\nimport TextareaAutosize from \"react-autosize-textarea\";\n\ntype Props = {\n  value: string;\n  onChange?: (value: string) => void;\n  placeholder?: string;\n  readOnly?: boolean;\n};\n\nexport const Place = ({\n  value,\n  onChange,\n  placeholder,\n  readOnly,\n  ...rest\n}: Props) => {\n  return (\n    <StyledInput\n      value={value}\n      placeholder={placeholder}\n      readOnly={readOnly}\n      onChange={(e: any) => {\n        onChange && onChange(e.target.value);\n      }}\n      async\n      {...rest}\n    />\n  );\n};\n\nexport const StyledInput = styled(TextareaAutosize)`\n  text-align: center;\n  font-size: 32px;\n  background-color: transparent;\n  border: 0;\n  outline: none;\n  margin: 4px 0;\n  color: #fed426;\n  text-shadow: 0px 1px 2px rgba(0, 0, 0, 0.8);\n  width: 100%;\n\n  padding-left: 0;\n  padding-right: 0;\n  line-height: 36px;\n  font-weight: 500;\n\n  &:focus {\n    outline: none;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/tick.6d45b966.svg\";","export default __webpack_public_path__ + \"static/media/checkbox.4e2450ab.svg\";","export default __webpack_public_path__ + \"static/media/checkboxChecked.7f6c2da0.svg\";","import { Checkbox } from \"@material-ui/core\";\nimport React from \"react\";\nimport { isAndroid } from \"react-device-detect\";\nimport styled from \"styled-components\";\n\nimport checkbox from \"../assets/checkbox.svg\";\nimport checkboxChecked from \"../assets/checkboxChecked.svg\";\n\ntype Props = {\n  checked: boolean;\n  onChange: (value: boolean) => void;\n  readOnly?: boolean;\n};\n\nexport const CheckBox = ({ onChange, checked, readOnly = false }: Props) => {\n  const handleClick = () => {\n    onChange(!checked);\n  };\n\n  return isAndroid ? (\n    <StyledCheckbox\n      checked={checked}\n      onClick={handleClick}\n      color=\"primary\"\n      readOnly={readOnly}\n    />\n  ) : (\n    <IOSCheckBox\n      src={checked ? checkboxChecked : checkbox}\n      onClick={readOnly ? undefined : handleClick}\n    />\n  );\n};\n\nconst IOSCheckBox = styled.img`\n  height: 32px;\n  display: inline-block;\n  vertical-align: top;\n  margin: 0 8px;\n`;\n\nconst StyledCheckbox = styled(Checkbox)`\n  display: inline-block;\n  vertical-align: top;\n  margin: 0 8px !important;\n  padding: 0 !important;\n\n  &.MuiCheckbox-colorPrimary {\n    color: #fff !important;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/greenTick.5e528318.svg\";","import { Dayjs } from \"dayjs\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Modal from \"react-modal\";\nimport styled from \"styled-components\";\n\nimport crossBlack from \"../../assets/crossBlack.svg\";\nimport greenTick from \"../../assets/greenTick.svg\";\nimport { ModalConfirmButton } from \"../../components/Button\";\n\ntype Props = {\n  isModalOpen: boolean;\n  onCancel: () => void;\n  onConfirm: (value: number) => void;\n  selectedAutoLeaveHour: number;\n  date: Dayjs;\n};\n\nexport const AutoLeaveModal = ({\n  isModalOpen,\n  onCancel,\n  onConfirm,\n  selectedAutoLeaveHour,\n  date,\n}: Props) => {\n  const { t } = useTranslation(\"confirm\");\n  const [autoLeaveHourTmp, setAutoLeaveHourTmp] = useState(\n    selectedAutoLeaveHour\n  );\n\n  useEffect(() => {\n    setAutoLeaveHourTmp(selectedAutoLeaveHour);\n  }, [setAutoLeaveHourTmp, selectedAutoLeaveHour]);\n\n  const handleConfirm = () => {\n    onConfirm(autoLeaveHourTmp);\n  };\n\n  const toDate = useMemo(() => date.add(autoLeaveHourTmp, \"hour\"), [\n    date,\n    autoLeaveHourTmp,\n  ]);\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      onRequestClose={onCancel}\n      style={{\n        overlay: {\n          backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n        },\n        content: {\n          outline: \"none\",\n          border: \"0\",\n          padding: \"16px\",\n          borderRadius: \"8px\",\n          width: \"240px\",\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          height: \"370px\",\n          overflow: \"hidden\",\n        },\n      }}\n      ariaHideApp={false}\n    >\n      <CrossWrapper>\n        <Cross src={crossBlack} onClick={onCancel} />\n      </CrossWrapper>\n      <Title>{t(\"message.set_auto_leave_time\")}</Title>\n      <HourListWrapper id=\"scroll\">\n        <HourList>\n          {[\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n            13,\n            14,\n            15,\n            16,\n            17,\n            18,\n            19,\n            20,\n            21,\n            22,\n            23,\n            24,\n          ].map((hour) => (\n            <HourListItem\n              onClick={() => {\n                setAutoLeaveHourTmp(hour);\n              }}\n              key={hour}\n            >\n              + {hour}\n              {t(\"form.hour\")}\n              {autoLeaveHourTmp === hour && <SelectedTick src={greenTick} />}\n            </HourListItem>\n          ))}\n        </HourList>\n      </HourListWrapper>\n      <TimeWrapper>\n        <div>{t(\"message.enter_at\", { time: date.format(\"MM-DD HH:mm\") })}</div>\n        <div>\n          {t(\"message.auto_leave_at\", { time: toDate.format(\"MM-DD HH:mm\") })}\n        </div>\n      </TimeWrapper>\n      <ModalConfirmButton onClick={handleConfirm}>\n        {t(\"global:button.confirm\")}\n      </ModalConfirmButton>\n    </Modal>\n  );\n};\n\nconst Cross = styled.img`\n  height: 20px;\n`;\n\nconst CrossWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n`;\n\nconst Title = styled.h1`\n  font-size: 20px;\n  text-align: center;\n  margin-top: 20px;\n  margin-bottom: 0;\n`;\n\nconst HourListWrapper = styled.div`\n  overflow: auto;\n  height: 180px;\n  padding: 0 8px;\n`;\n\nconst HourList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nconst HourListItem = styled.li`\n  line-height: 40px;\n  border-bottom: 1px #eeeeee solid;\n  padding: 0 8px;\n`;\n\nconst TimeWrapper = styled.div`\n  font-size: 12px;\n  text-align: center;\n  padding: 16px 0;\n`;\n\nconst SelectedTick = styled.img`\n  height: 32px;\n  position: relative;\n  float: right;\n  top: 4px;\n`;\n","import { Dayjs } from \"dayjs\";\nimport { propOr } from \"ramda\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport cross from \"../../assets/cross.svg\";\nimport tick from \"../../assets/tick.svg\";\nimport { ConfirmButton } from \"../../components/Button\";\nimport { CheckBox } from \"../../components/CheckBox\";\nimport { LeaveModal } from \"../../components/LeaveModal\";\nimport { Place } from \"../../components/Place\";\nimport { useI18n } from \"../../hooks/useI18n\";\nimport {\n  TravelRecord,\n  travelRecordType,\n  useTravelRecord,\n} from \"../../hooks/useTravelRecord\";\nimport { dayjs } from \"../../utils/dayjs\";\nimport { getVenueName } from \"../../utils/qr\";\nimport { AutoLeaveModal } from \"./AutoLeaveModal\";\n\ntype Props = {\n  currentTravelRecord: TravelRecord | null;\n  readOnly?: boolean;\n  confirmPageIcon?: string | null;\n};\n\nexport const Confirm = ({\n  currentTravelRecord,\n  readOnly = false,\n  confirmPageIcon,\n}: Props) => {\n  const { t } = useTranslation(\"confirm\");\n  const browserHistory = useHistory();\n  const { updateCurrentTravelRecord } = useTravelRecord();\n  const [autoLeave, setAutoLeave] = useState(true);\n  const [autoLeaveHour, setAutoLeaveHour] = useState(4);\n  const [isAutoLeaveModalOpen, setIsAutoLeaveModalOpen] = useState(false);\n  const [isLeaveModalOpen, setIsLeaveModalOpen] = useState(false);\n  const { language } = useI18n();\n\n  useEffect(() => {\n    if (!currentTravelRecord) browserHistory.push(\"/\");\n  }, [currentTravelRecord, browserHistory]);\n\n  const date = useMemo(() => dayjs(), []);\n\n  const place = useMemo(() => getVenueName(currentTravelRecord, language), [\n    currentTravelRecord,\n    language,\n  ]);\n\n  const handleSetAutoLeaveHour = (value: number) => {\n    setAutoLeaveHour(value);\n    setIsAutoLeaveModalOpen(false);\n  };\n\n  const handleLeavePage = () => {\n    setIsAutoLeaveModalOpen(false);\n    setIsLeaveModalOpen(false);\n    browserHistory.push(\"/\");\n  };\n\n  const handleLeave = (date: Dayjs) => {\n    updateCurrentTravelRecord({\n      outTime: date.startOf(\"minute\").toISOString(),\n    });\n    handleLeavePage();\n  };\n\n  useEffect(() => {\n    const toDate = date.add(autoLeaveHour, \"hour\");\n    updateCurrentTravelRecord({\n      outTime: autoLeave ? toDate.toISOString() : undefined,\n    });\n  }, [autoLeave, date, autoLeaveHour, updateCurrentTravelRecord]);\n\n  const venueType = propOr(travelRecordType.PLACE, \"type\", currentTravelRecord);\n\n  return (\n    <>\n      <PageWrapper>\n        <Header>\n          {confirmPageIcon && <Logo src={confirmPageIcon} />}\n          {readOnly ? (\n            <Cross src={cross} />\n          ) : (\n            <Link to=\"/\">\n              <Cross src={cross} />\n            </Link>\n          )}\n        </Header>\n        <MessageWrapper>\n          {venueType === travelRecordType.TAXI ? (\n            <>\n              <Msg>{t(\"message.you_have_entered_taxi\")}</Msg>\n              <License>{t(\"message.res_mark\")}:</License>\n            </>\n          ) : (\n            <Msg>{t(\"message.you_have_entered_venue\")}</Msg>\n          )}\n          <PlaceWrapper>\n            <Place value={place || \"\"} readOnly />\n          </PlaceWrapper>\n          <Time>{date.format(\"YYYY-MM-DD HH:mm\")}</Time>\n        </MessageWrapper>\n        <TickWrapper>\n          <TickWrapperInner>\n            <Tick src={tick} />\n          </TickWrapperInner>\n        </TickWrapper>\n        <ActionGroup>\n          <AutoLeave>\n            <CheckBoxWrapper>\n              <CheckBox\n                checked={autoLeave}\n                onChange={setAutoLeave}\n                readOnly={readOnly}\n              />\n              {t(\"form.auto_leave_after_x_hour\", { hour: autoLeaveHour })}\n            </CheckBoxWrapper>\n            <Change\n              onClick={() => {\n                if (readOnly) return;\n                setIsAutoLeaveModalOpen(true);\n              }}\n            >\n              {t(\"global:button.change\")}\n            </Change>\n          </AutoLeave>\n          <ConfirmButton\n            shadowed\n            onClick={() => {\n              if (readOnly) return;\n              setIsLeaveModalOpen(true);\n            }}\n          >\n            {venueType === travelRecordType.TAXI\n              ? t(\"button.get_off\")\n              : t(\"button.leave\")}\n          </ConfirmButton>\n          <LeaveMessage>{t(\"message.remember_to_leave\")}</LeaveMessage>\n        </ActionGroup>\n      </PageWrapper>\n      <AutoLeaveModal\n        isModalOpen={isAutoLeaveModalOpen}\n        onCancel={() => {\n          setIsAutoLeaveModalOpen(false);\n        }}\n        onConfirm={handleSetAutoLeaveHour}\n        selectedAutoLeaveHour={autoLeaveHour}\n        date={date}\n      />\n      <LeaveModal\n        visible={isLeaveModalOpen}\n        onDiscard={() => {\n          setIsLeaveModalOpen(false);\n        }}\n        onFinish={handleLeave}\n      />\n    </>\n  );\n};\n\nconst PageWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  text-shadow: 0px 1px 2px rgba(0, 0, 0, 0.8);\n  display: flex;\n  flex-direction: column;\n  color: #fff;\n`;\n\nconst Logo = styled.img`\n  height: 72px;\n`;\n\nconst Header = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  flex-shrink: 0;\n  margin: 24px 0 16px 0;\n`;\n\nconst Cross = styled.img`\n  height: 20px;\n  margin: 8px 24px;\n  position: absolute;\n  right: 0;\n`;\n\nconst PlaceWrapper = styled.div`\n  padding: 0 32px;\n`;\n\nconst MessageWrapper = styled.div`\n  width: 100%;\n  height: 50%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst TickWrapper = styled.div`\n  height: 100%;\n  width: 100%;\n  text-align: center;\n`;\n\nconst TickWrapperInner = styled.div`\n  height: 100%;\n  max-height: 200px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst Tick = styled.img`\n  display: inline-block;\n  height: 100%;\n  max-height: 110px;\n`;\n\nconst Msg = styled.div`\n  color: #ffffff;\n  text-align: center;\n  font-size: 15px;\n`;\n\nconst License = styled(Msg)`\n  margin-top: 8px;\n`;\n\nconst Time = styled.div`\n  color: #ffffff;\n  text-align: center;\n`;\n\nconst AutoLeave = styled.div`\n  margin-bottom: 16px;\n  width: 100%;\n  max-width: 380px;\n  margin: 16px auto;\n  display: flex;\n  flex-shrink: 0;\n  font-size: 14px;\n`;\n\nconst CheckBoxWrapper = styled.div`\n  width: 100%;\n  text-align: left;\n  padding-left: 24px;\n  line-height: 32px;\n`;\n\nconst Change = styled.div`\n  flex-shrink: 0;\n  padding-right: 24px;\n  line-height: 32px;\n`;\n\nconst LeaveMessage = styled.div`\n  text-align: center;\n  padding-bottom: 40px;\n  flex-shrink: 0;\n`;\n\nconst ActionGroup = styled.div`\n  width: 100%;\n  flex-shrink: 0;\n`;\n","import dayjs, { Dayjs } from \"dayjs\";\nimport React, { useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Modal from \"react-modal\";\nimport styled from \"styled-components\";\n\nimport crossBlack from \"../../assets/crossBlack.svg\";\nimport { travelRecordType } from \"../../hooks/useTravelRecord\";\nimport { ModalConfirmButton } from \"../Button\";\n\ntype Props = {\n  isModalOpen: boolean;\n  onCancel: () => void;\n  onLeaveNow: () => void;\n  onLeaved: () => void;\n  place: string;\n  date: Dayjs;\n  outTime?: string;\n  venueType: travelRecordType;\n};\n\nexport const Prompt = ({\n  isModalOpen,\n  onCancel,\n  onLeaveNow,\n  onLeaved,\n  place,\n  date,\n  outTime,\n  venueType,\n}: Props) => {\n  const { t } = useTranslation(\"confirm\");\n  const toDate = useMemo(() => dayjs(outTime), [outTime]);\n\n  const heightBase = outTime ? 430 : 390;\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      onRequestClose={onCancel}\n      style={{\n        overlay: {\n          backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n        },\n        content: {\n          outline: \"none\",\n          border: \"0\",\n          padding: \"16px\",\n          borderRadius: \"8px\",\n          width: \"240px\",\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          height:\n            venueType === travelRecordType.TAXI\n              ? `${heightBase + 24}px`\n              : `${heightBase}px`,\n          overflow: \"hidden\",\n        },\n      }}\n      ariaHideApp={false}\n    >\n      <CrossWrapper>\n        <Cross src={crossBlack} onClick={onCancel} />\n      </CrossWrapper>\n      {venueType === travelRecordType.TAXI ? (\n        <>\n          <Msg>{t(\"message.you_have_entered_taxi\")}</Msg>\n          <License>{t(\"message.res_mark\")}:</License>\n        </>\n      ) : (\n        <Msg>{t(\"message.you_have_entered_venue\")}</Msg>\n      )}\n      <Place>{place}</Place>\n      <Time>{date.format(\"YYYY-MM-DD HH:mm\")}</Time>\n      <Title>{t(\"message.you_sure_want_to_leave\")}</Title>\n      {outTime && (\n        <AutoLeave>\n          {t(\"form.auto_leave_at\", { time: toDate.format(\"MM-DD HH:mm\") })}\n        </AutoLeave>\n      )}\n      <ModalConfirmButton onClick={onLeaveNow}>\n        {t(\"button.leave_now\")}\n      </ModalConfirmButton>\n      <GreenButton onClick={onLeaved}> {t(\"button.already_left\")}</GreenButton>\n    </Modal>\n  );\n};\n\nconst Cross = styled.img`\n  height: 20px;\n`;\n\nconst CrossWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  margin-bottom: 8px;\n`;\n\nconst Title = styled.div`\n  font-size: 20px;\n  text-align: center;\n  margin: 64px 0;\n  font-weight: 500;\n`;\n\nconst GreenButton = styled(ModalConfirmButton)`\n  background-color: #12b188;\n  color: #fff;\n  text-shadow: 0px 1px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst Msg = styled.div`\n  text-align: center;\n  font-size: 16px;\n`;\n\nconst License = styled(Msg)`\n  margin-top: 8px;\n`;\n\nconst Time = styled.div`\n  text-align: center;\n  font-size: 14px;\n`;\n\nconst Place = styled.div`\n  color: unset;\n  text-shadow: none;\n  text-align: center;\n  font-size: 28px;\n  font-weight: 500;\n  line-height: 48px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nconst AutoLeave = styled.div`\n  font-size: 12px;\n  text-align: center;\n  padding: 12px 0;\n`;\n","import React, { forwardRef, useImperativeHandle, useState } from \"react\";\n\nimport styled from \"styled-components\";\nimport Picker from \"pickerjs\";\nimport \"pickerjs/dist/picker.min.css\";\n\nexport type DatePickerHandler = {\n  init: () => void;\n  getValue: () => Date;\n};\n\nexport const DatePicker = forwardRef((props: any, ref: any) => {\n  const [pickerInstance, setPickerInstance] = useState<Picker | null>(null);\n\n  // mount effect wont work on model, need to call this after onAfterOpen event\n  useImperativeHandle(ref, () => ({\n    init: () => {\n      const ele = document.querySelector(\n        \".js-inline-picker\"\n      ) as HTMLElement | null;\n      if (!ele) return;\n      setPickerInstance(\n        new Picker(ele, {\n          inline: true,\n          rows: 2,\n          pick: (e) => {\n            console.log(e);\n          },\n        })\n      );\n    },\n    getValue: () => {\n      if (!pickerInstance) return \"\";\n      return pickerInstance.getDate();\n    },\n  }));\n\n  return (\n    <Wrapper>\n      <div className=\"js-inline-picker\" />\n    </Wrapper>\n  );\n});\n\nconst Wrapper = styled.div`\n  & .picker {\n    font-size: 12px;\n  }\n\n  & .picker-dialog {\n    border: 0;\n  }\n\n  & .picker-cell:before {\n    background-image: unset;\n  }\n\n  & .picker-cell:after {\n    background-image: unset;\n  }\n\n  & .picker-picked {\n    color: unset;\n    border-top: #12b188 1px solid;\n    border-bottom: #12b188 1px solid;\n  }\n\n  & .picker-cell {\n    padding: 0 4px;\n  }\n\n  & .picker-item {\n    padding: 3px 0px;\n  }\n\n  & .picker-cell + .picker-cell {\n    border: 0;\n  }\n`;\n","import { Snackbar } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { Dayjs } from \"dayjs\";\nimport React, { useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Modal from \"react-modal\";\nimport styled from \"styled-components\";\n\nimport crossBlack from \"../../assets/crossBlack.svg\";\nimport { ModalConfirmButton } from \"../../components/Button\";\nimport { DatePicker, DatePickerHandler } from \"../../components/DatePicker\";\nimport { useTime } from \"../../hooks/useTime\";\nimport { dayjs } from \"../../utils/dayjs\";\n\ntype Props = {\n  isModalOpen: boolean;\n  onCancel: () => void;\n  onConfirm: (date: Dayjs) => void;\n  date: Dayjs;\n};\n\nexport const TimePickModal = ({\n  isModalOpen,\n  onCancel,\n  onConfirm,\n  date,\n}: Props) => {\n  const { t } = useTranslation(\"confirm\");\n  const { currentTime } = useTime();\n  const datePickerRef = useRef<DatePickerHandler>(null);\n  const [showPastDateError, setShowPastDateError] = useState(false);\n  const [showFutureDateError, setShowFutureDateError] = useState(false);\n\n  const initPicker = () => {\n    datePickerRef.current && datePickerRef.current.init();\n  };\n\n  const handleConfirm = () => {\n    const leaveDate = datePickerRef.current\n      ? datePickerRef.current.getValue()\n      : Date();\n\n    const leaveDateDayJs = dayjs(leaveDate).startOf(\"minute\");\n\n    if (leaveDateDayJs.isBefore(date.startOf(\"minute\"))) {\n      setShowPastDateError(true);\n    } else if (leaveDateDayJs.isAfter(currentTime)) {\n      setShowFutureDateError(true);\n    } else {\n      onConfirm(leaveDateDayJs);\n    }\n  };\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      onRequestClose={onCancel}\n      style={{\n        overlay: {\n          backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n        },\n        content: {\n          outline: \"none\",\n          border: \"0\",\n          padding: \"16px\",\n          borderRadius: \"8px\",\n          width: \"240px\",\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          height: \"280px\",\n          overflow: \"hidden\",\n        },\n      }}\n      ariaHideApp={false}\n      onAfterOpen={initPicker}\n    >\n      <CrossWrapper>\n        <Cross src={crossBlack} onClick={onCancel} />\n      </CrossWrapper>\n      <Title>{t(\"message.when_you_left\")}</Title>\n      <TimePickerWrapper>\n        <DatePicker ref={datePickerRef} />\n      </TimePickerWrapper>\n      <ModalConfirmButton onClick={handleConfirm}>\n        {t(\"global:button.confirm\")}\n      </ModalConfirmButton>\n      <Snackbar\n        open={showPastDateError}\n        autoHideDuration={2000}\n        onClose={() => {\n          setShowPastDateError(false);\n        }}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      >\n        <Alert elevation={6} variant=\"filled\" severity=\"error\">\n          {t(\"message.leave_time_earlier_than_enter\")}\n        </Alert>\n      </Snackbar>\n      <Snackbar\n        open={showFutureDateError}\n        autoHideDuration={2000}\n        onClose={() => {\n          setShowFutureDateError(false);\n        }}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      >\n        <Alert elevation={6} variant=\"filled\" severity=\"error\">\n          {t(\"message.future_leave_time\")}\n        </Alert>\n      </Snackbar>\n    </Modal>\n  );\n};\n\nconst Cross = styled.img`\n  height: 20px;\n`;\n\nconst CrossWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n`;\n\nconst Title = styled.div`\n  font-size: 20px;\n  text-align: center;\n  margin-top: 24px;\n`;\n\nconst TimePickerWrapper = styled.div`\n  border-bottom: 1px #eeeeee solid;\n  border-top: 1px #eeeeee solid;\n  padding: 32px 0;\n  margin: 16px 0;\n`;\n","import { Dayjs } from \"dayjs\";\nimport { propOr } from \"ramda\";\nimport React, { useMemo, useState } from \"react\";\n\nimport { useI18n } from \"../../hooks/useI18n\";\nimport { useTime } from \"../../hooks/useTime\";\nimport { travelRecordType, useTravelRecord } from \"../../hooks/useTravelRecord\";\nimport { dayjs } from \"../../utils/dayjs\";\nimport { getVenueName } from \"../../utils/qr\";\nimport { Prompt } from \"./Prompt\";\nimport { TimePickModal } from \"./TimePickModal\";\n\ntype Props = {\n  visible: boolean;\n  onDiscard: () => void;\n  onFinish: (leaveTime: Dayjs) => void;\n};\n\nexport const LeaveModal = ({ visible, onDiscard, onFinish }: Props) => {\n  const { currentTime } = useTime();\n  const { currentTravelRecord } = useTravelRecord();\n  const [isTimePickModalOpen, setIsTimePickModalOpen] = useState(false);\n  const { language } = useI18n();\n\n  const place = useMemo(() => getVenueName(currentTravelRecord, language), [\n    currentTravelRecord,\n    language,\n  ]);\n\n  const handleLeaveNow = () => {\n    onFinish(currentTime);\n  };\n\n  const handleLeaveEarly = (time: Dayjs) => {\n    onFinish(time);\n  };\n\n  const venueType = propOr<\n    travelRecordType,\n    typeof currentTravelRecord,\n    travelRecordType\n  >(travelRecordType.PLACE, \"type\", currentTravelRecord);\n\n  return !currentTravelRecord ? (\n    <></>\n  ) : (\n    <>\n      <Prompt\n        isModalOpen={visible && !isTimePickModalOpen}\n        onCancel={() => {\n          setIsTimePickModalOpen(false);\n          onDiscard();\n        }}\n        onLeaveNow={handleLeaveNow}\n        onLeaved={() => {\n          setIsTimePickModalOpen(true);\n        }}\n        place={place || \"\"}\n        date={dayjs(currentTravelRecord.inTime)}\n        outTime={currentTravelRecord.outTime}\n        venueType={venueType}\n      />\n      <TimePickModal\n        isModalOpen={visible && isTimePickModalOpen}\n        onCancel={() => {\n          setIsTimePickModalOpen(false);\n          onDiscard();\n        }}\n        onConfirm={handleLeaveEarly}\n        date={dayjs(currentTravelRecord.inTime)}\n      />\n    </>\n  );\n};\n","import constate from \"constate\";\nimport { Dayjs } from \"dayjs\";\nimport { head, remove, tail } from \"ramda\";\nimport { useCallback, useMemo } from \"react\";\n\nimport { dayjs } from \"../utils/dayjs\";\nimport { useEncryptedStore } from \"./useEncryptedStore\";\nimport { useTime } from \"./useTime\";\n\nexport enum travelRecordInputType {\n  MANUALLY = \"MANUALLY\",\n  SCAN = \"SCAN\",\n}\n\nexport enum travelRecordType {\n  PLACE = \"PLACE\",\n  TAXI = \"TAXI\",\n}\n\nexport type TravelRecord =\n  | {\n      venueId?: string;\n      nameEn?: string;\n      nameZh?: string;\n      type: travelRecordType.PLACE;\n      inputType: travelRecordInputType;\n      inTime: string;\n      outTime?: string;\n    }\n  | {\n      venueId?: string;\n      type: travelRecordType.TAXI;\n      inputType: travelRecordInputType;\n      inTime: string;\n      outTime?: string;\n    };\n\nexport const [UseTravelRecordProvider, useTravelRecord] = constate(() => {\n  const { currentTime } = useTime();\n  const {\n    unlockStore: unlockTravelRecord,\n    lockStore: lockTravelRecord,\n    value: travelRecord,\n    setValue: setTravelRecord,\n    initPassword: encryptTravelRecord,\n    unlocked,\n    incognito,\n    setIncognito,\n  } = useEncryptedStore<TravelRecord[]>({\n    key: \"travel_record\",\n    defaultValue: [],\n  });\n\n  const getCurrentTravelRecord = useCallback(\n    (records: TravelRecord[], currentTime: Dayjs) => {\n      const firstItem = head(records);\n      if (\n        !firstItem ||\n        (firstItem.outTime && dayjs(firstItem.outTime).isBefore(currentTime))\n      )\n        return null;\n\n      return firstItem;\n    },\n    []\n  );\n\n  const currentTravelRecord = useMemo(\n    () => getCurrentTravelRecord(travelRecord, currentTime),\n    [getCurrentTravelRecord, travelRecord, currentTime]\n  );\n\n  const createTravelRecord = useCallback(\n    (record: TravelRecord) => {\n      setTravelRecord((prev) => {\n        const currentRecord = getCurrentTravelRecord(prev, currentTime);\n        if (currentRecord) {\n          return [\n            record,\n            { ...currentRecord, outTime: currentTime.toISOString() },\n            ...tail(prev),\n          ];\n        } else {\n          return [record, ...prev];\n        }\n      });\n    },\n    [getCurrentTravelRecord, currentTime, setTravelRecord]\n  );\n\n  const updateCurrentTravelRecord = useCallback(\n    (data: Partial<TravelRecord>) => {\n      setTravelRecord((prev) => {\n        const currentRecord = getCurrentTravelRecord(prev, currentTime);\n        if (currentRecord) {\n          return [{ ...currentRecord, ...data }, ...tail(prev)];\n        }\n        return prev;\n      });\n    },\n    [getCurrentTravelRecord, currentTime, setTravelRecord]\n  );\n\n  const removeTravelRecord = (index: number) => {\n    setTravelRecord((prev) => remove(index, 1, prev));\n  };\n\n  return {\n    travelRecord,\n    setTravelRecord,\n    currentTravelRecord,\n    createTravelRecord,\n    updateCurrentTravelRecord,\n    removeTravelRecord,\n    lockTravelRecord,\n    unlockTravelRecord,\n    encryptTravelRecord,\n    unlocked,\n    incognito,\n    setIncognito,\n  };\n});\n","import { AES, enc } from \"crypto-js\";\nimport { isNil } from \"ramda\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useLocalStorage, useMount, useUpdateEffect } from \"react-use\";\n\nconst encryptValue = (input: string, password: string) =>\n  AES.encrypt(input, password).toString();\n\nconst decryptValue = (input: string, password: string) =>\n  AES.decrypt(input, password).toString(enc.Utf8);\n\nexport const useEncryptedStore = <T extends T[] | Object>({\n  key,\n  defaultValue: fallbackValue,\n}: {\n  key: string;\n  defaultValue: T;\n}) => {\n  const [incognito, setIncognito] = useLocalStorage(\"incognito\", false);\n  const [defaultValue] = useState<T>(fallbackValue);\n\n  const [password, setPassword] = useState<string | null>(null);\n\n  const [savedValue, setSavedValue] = useLocalStorage<string>(\n    key,\n    password\n      ? encryptValue(JSON.stringify(defaultValue), password)\n      : JSON.stringify(defaultValue)\n  );\n\n  const [, , removePasswordHash] = useLocalStorage<string | null>(\n    \"password_hash\",\n    null\n  );\n\n  useEffect(() => {\n    // Old version store password with SHA256, which can be brute-forced\n    removePasswordHash();\n  }, [removePasswordHash]);\n\n  const [decryptedValue, setDecryptedValue] = useState<T>(defaultValue);\n\n  const isEncrypted = useMemo(() => {\n    try {\n      if (!savedValue) return false;\n      JSON.parse(savedValue);\n    } catch (e) {\n      return true;\n    }\n    return false;\n  }, [savedValue]);\n\n  const unlocked = useMemo(() => (isEncrypted ? !isNil(password) : true), [\n    password,\n    isEncrypted,\n  ]);\n\n  useMount(() => {\n    if (!isEncrypted) {\n      setDecryptedValue(savedValue ? JSON.parse(savedValue) : defaultValue);\n    }\n  });\n\n  useUpdateEffect(() => {\n    if (!unlocked || incognito) return;\n    setSavedValue(\n      password\n        ? encryptValue(JSON.stringify(decryptedValue || defaultValue), password)\n        : JSON.stringify(decryptedValue)\n    );\n  }, [decryptedValue]);\n\n  const initPassword = useCallback(\n    (newPassword: string) => {\n      const data = encryptValue(\n        savedValue || JSON.stringify(defaultValue),\n        newPassword\n      );\n      setSavedValue(data);\n      setPassword(newPassword);\n    },\n    [savedValue, setSavedValue, defaultValue]\n  );\n\n  const unlockStore = useCallback(\n    (password: string) => {\n      if (!isEncrypted) return true;\n      try {\n        const decryptedValue = decryptValue(\n          savedValue || JSON.stringify(defaultValue),\n          password\n        );\n        setDecryptedValue(JSON.parse(decryptedValue));\n        setPassword(password);\n\n        return true;\n      } catch (e) {\n        return false;\n      }\n    },\n    [defaultValue, savedValue, isEncrypted]\n  );\n\n  const lockStore = useCallback(() => {\n    if (!isEncrypted) return;\n    setPassword(null);\n    setDecryptedValue(defaultValue);\n  }, [isEncrypted, defaultValue]);\n\n  return {\n    unlockStore,\n    lockStore,\n    value: decryptedValue,\n    setValue: setDecryptedValue,\n    initPassword,\n    unlocked,\n    incognito,\n    setIncognito,\n  };\n};\n","import \"dayjs/locale/zh-hk\";\nimport \"dayjs/locale/en\";\n\nimport _, { ConfigType } from \"dayjs\";\nimport i18n from \"i18next\";\n\nexport const dayjs = (date?: ConfigType) =>\n  _(date).locale(i18n.language.toLowerCase());\n","// should match dayjs and react-i18-next\nexport enum languageType {\n  \"ZH-HK\" = \"zh-HK\",\n  \"EN\" = \"en\",\n}\n","import cameraSetting from \"./cameraSetting.json\";\nimport confirm from \"./confirm.json\";\nimport confirmPageIcon from \"./confirmPageIcon.json\";\nimport disclaimer from \"./disclaimer.json\";\nimport global from \"./global.json\";\nimport login from \"./login.json\";\nimport mainScreen from \"./mainScreen.json\";\nimport qrGenerator from \"./qrGenerator.json\";\nimport qrReader from \"./qrReader.json\";\nimport tutorial from \"./tutorial.json\";\n\nconst locals = {\n  global,\n  tutorial,\n  main_screen: mainScreen,\n  qr_reader: qrReader,\n  qr_generator: qrGenerator,\n  login,\n  disclaimer,\n  confirm_page_icon: confirmPageIcon,\n  confirm,\n  camera_setting: cameraSetting,\n};\n\nexport default locals;\n","import cameraSetting from \"./cameraSetting.json\";\nimport confirm from \"./confirm.json\";\nimport confirmPageIcon from \"./confirmPageIcon.json\";\nimport disclaimer from \"./disclaimer.json\";\nimport global from \"./global.json\";\nimport login from \"./login.json\";\nimport mainScreen from \"./mainScreen.json\";\nimport qrGenerator from \"./qrGenerator.json\";\nimport qrReader from \"./qrReader.json\";\nimport tutorial from \"./tutorial.json\";\n\nconst locals = {\n  global,\n  tutorial,\n  main_screen: mainScreen,\n  qr_reader: qrReader,\n  qr_generator: qrGenerator,\n  login,\n  disclaimer,\n  confirm_page_icon: confirmPageIcon,\n  confirm,\n  camera_setting: cameraSetting,\n};\n\nexport default locals;\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nimport { languageType } from \"./../constants/languageType\";\nimport english from \"./english\";\nimport traditionalChinese from \"./traditionalChinese\";\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources: {\n      [languageType[\"ZH-HK\"]]: traditionalChinese,\n      [languageType[\"EN\"]]: english,\n    },\n    lng: languageType[\"ZH-HK\"],\n    fallbackLng: languageType[\"ZH-HK\"],\n    interpolation: {\n      escapeValue: false,\n    },\n    debug: true,\n  });\n","import React from \"react\";\nimport { AnimatedSwitch as Switch, spring } from \"react-router-transition\";\nimport styled from \"styled-components\";\n\nconst glide = (val: number) =>\n  spring(val, {\n    stiffness: 174,\n    damping: 24,\n  });\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const AnimatedSwitch = (props: Props) => {\n  return (\n    <StyledSwitch\n      {...props}\n      atEnter={{ opacity: 1, offset: 100, zIndex: 100 }}\n      atLeave={{\n        opacity: 0,\n        offset: 0,\n      }}\n      atActive={{ opacity: 1, offset: glide(0) }}\n      mapStyles={(styles) => ({\n        opacity: styles.opacity,\n        zIndex: styles.zIndex,\n        transform: `translateX(${styles.offset}%)`,\n      })}\n      runOnMount\n    />\n  );\n};\n\nconst StyledSwitch = styled(Switch)`\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  & > div {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background-color: #12b188;\n    box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.8);\n  }\n`;\n","import { CircularProgress } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\n// Prevent flash\n// ref: https://github.com/gregberge/loadable-components/issues/322\nexport const PageLoading = () => {\n  const delay = 200; // 200ms\n  const [showLoadingIndicator, setLoadingIndicatorVisibility] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setLoadingIndicatorVisibility(true), delay);\n\n    // this will clear Timeout when component unmont like in willComponentUnmount\n    return () => {\n      clearTimeout(timer);\n    };\n  });\n\n  return showLoadingIndicator ? (\n    <FixWrapper>\n      <Wrapper>\n        <CircularProgress />\n      </Wrapper>\n    </FixWrapper>\n  ) : null;\n};\n\nconst FixWrapper = styled.div`\n  z-index: 1000;\n  position: absolute;\n  top: 50%; /* position the top  edge of the element at the middle of the parent */\n  left: 50%; /* position the left edge of the element at the middle of the parent */\n\n  transform: translate(\n    -50%,\n    -50%\n  ); /* This is a shorthand of\n                                         translateX(-50%) and translateY(-50%) */\n`;\n\nconst Wrapper = styled.div`\n  background-color: #fff;\n  padding: 40px;\n  border-radius: 8px;\n`;\n","import React, { Suspense, useCallback, useEffect } from \"react\";\nimport { Redirect, Route, useLocation } from \"react-router-dom\";\nimport { useLocalStorage } from \"react-use\";\nimport { createGlobalStyle } from \"styled-components\";\nimport adapter from \"webrtc-adapter\";\n\nimport { AnimatedSwitch } from \"./components/AnimatedSwitch\";\nimport { PageLoading } from \"./components/PageLoading\";\nimport { Confirm } from \"./containers/Confirm\";\nimport { useTravelRecord } from \"./hooks/useTravelRecord\";\n\nconst QRGenerator = React.lazy(() => import(\"./containers/QRGenerator\"));\nconst QRReader = React.lazy(() => import(\"./containers/QRReader\"));\nconst CameraSetting = React.lazy(() => import(\"./containers/CameraSetting\"));\nconst Tutorial = React.lazy(() => import(\"./containers/Tutorial\"));\nconst MainScreen = React.lazy(() => import(\"./containers/MainScreen\"));\nconst Disclaimer = React.lazy(() => import(\"./containers/Disclaimer\"));\nconst Login = React.lazy(() => import(\"./containers/Login\"));\nconst ConfirmPageIconSetting = React.lazy(\n  () => import(\"./containers/ConfirmPageIconSetting\")\n);\n\nexport const App = () => {\n  const [finishedTutorial, setFinishedTutorial] = useLocalStorage(\n    \"finished_tutorial\",\n    false\n  );\n  const [confirmPageIcon, setConfirmPageIcon] = useLocalStorage<string | null>(\n    \"confirmPageIcon\",\n    null\n  );\n  const { lockTravelRecord, unlocked, currentTravelRecord } = useTravelRecord();\n  const { pathname } = useLocation();\n\n  const handleBlur = useCallback(() => {\n    console.log(pathname);\n    if (pathname !== \"/qrReader\" && pathname !== \"/cameraSetting\")\n      lockTravelRecord();\n  }, [lockTravelRecord, pathname]);\n\n  useEffect(() => {\n    console.log(adapter.browserDetails.browser, adapter.browserDetails.version);\n\n    window.addEventListener(\"blur\", handleBlur);\n    return () => {\n      window.removeEventListener(\"blur\", handleBlur);\n    };\n  }, [handleBlur]);\n\n  return (\n    <Suspense fallback={<PageLoading />}>\n      <GlobalStyle />\n      <AnimatedSwitch>\n        {!unlocked && (\n          <Route exact path=\"/login\">\n            <Login />\n          </Route>\n        )}\n        {!unlocked && <Redirect to=\"/login\" />}\n        {!finishedTutorial && (\n          <Route exact path=\"/tutorial\">\n            <Tutorial setFinishedTutorial={setFinishedTutorial} />\n          </Route>\n        )}\n        {!finishedTutorial && <Redirect to=\"/tutorial\" />}\n        <Route exact path=\"/\">\n          <MainScreen />\n        </Route>\n        <Route exact path=\"/confirm\">\n          {/* Don't split, to provide smooth transition between QR and confirm */}\n          <Confirm\n            confirmPageIcon={confirmPageIcon}\n            currentTravelRecord={currentTravelRecord}\n          />\n        </Route>\n        <Route exact path=\"/qrGenerator\">\n          <QRGenerator />\n        </Route>\n        <Route exact path=\"/disclaimer\">\n          <Disclaimer />\n        </Route>\n        <Route exact path=\"/qrReader\">\n          <QRReader />\n        </Route>\n        <Route exact path=\"/cameraSetting\">\n          <CameraSetting />\n        </Route>\n        <Route exact path=\"/confirmPageIcon\">\n          <ConfirmPageIconSetting\n            confirmPageIcon={confirmPageIcon}\n            setConfirmPageIcon={setConfirmPageIcon}\n          />\n        </Route>\n        <Redirect to=\"/\" />\n      </AnimatedSwitch>\n    </Suspense>\n  );\n};\n\nconst GlobalStyle = createGlobalStyle`\nhtml {\n  width: 100%;\n  height: 100%;\n}\n\nbody {\n  margin: 0;\n  font-family: Rubik, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  background-color:#12b188;\n  width: 100%;\n  height: 100%;\n}\n\ntextarea {\n  font-family: inherit;\n}\n\n\n#root {\n  width: 100%;\n  height: 100%;\n}\n\na {\n  text-decoration: none;\n}\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"./locales\";\n\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core\";\nimport { teal, yellow } from \"@material-ui/core/colors\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport { App } from \"./App\";\nimport { UseCameraProvider } from \"./hooks/useCamera\";\nimport { UseI18nProvider } from \"./hooks/useI18n\";\nimport { UseTimeProvider } from \"./hooks/useTime\";\nimport { UseTravelRecordProvider } from \"./hooks/useTravelRecord\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: teal[500] },\n    secondary: { main: yellow[600] },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <UseI18nProvider>\n      <HashRouter basename=\"/\">\n        <ThemeProvider theme={theme}>\n          <UseTimeProvider>\n            <UseTravelRecordProvider>\n              <UseCameraProvider>\n                <App />\n              </UseCameraProvider>\n            </UseTravelRecordProvider>\n          </UseTimeProvider>\n        </ThemeProvider>\n      </HashRouter>\n    </UseI18nProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register({\n  onUpdate: () => {\n    const shouldReload = window.confirm(\"已有新版本, 按確定重新載入頁面\");\n    shouldReload && window.location.reload();\n  },\n});\n","import styled from \"styled-components\";\n\nexport const ConfirmButton = styled.button<{ shadowed?: boolean }>`\n  display: block;\n  margin: auto;\n  margin-bottom: 16px;\n  font-size: 24px;\n  padding: 10px 0;\n  width: 80%;\n  border-radius: 48px;\n  flex-shrink: 0;\n  max-width: 280px;\n  font-weight: 500;\n\n  ${(props) =>\n    props.disabled\n      ? `background-color: #D3D3D3;\n        color: #A1A1A1;\n        `\n      : `\n        background-color: #fed426;\n      `}\n\n  border: 0;\n  outline: none;\n  ${(props) =>\n    props.shadowed ? \"box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.5);\" : \"\"}\n\n  &:focus {\n    outline: none;\n    text-decoration: none;\n  }\n`;\n\nexport const ModalConfirmButton = styled(ConfirmButton)`\n  font-size: 16px;\n  padding: 12px 0;\n  width: 90%;\n  font-weight: unset;\n`;\n","import { dayjs } from \"./../utils/dayjs\";\nimport { useState } from \"react\";\nimport { useHarmonicIntervalFn } from \"react-use\";\nimport constate from \"constate\";\n\nexport const [UseTimeProvider, useTime] = constate(() => {\n  const [currentTime, setCurrentTime] = useState(dayjs());\n\n  useHarmonicIntervalFn(() => {\n    setCurrentTime(dayjs());\n  }, 1000);\n\n  return {\n    currentTime,\n  };\n});\n","import constate from \"constate\";\nimport { useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useLocalStorage } from \"react-use\";\n\nimport { languageType } from \"./../constants/languageType\";\n\nexport const [UseI18nProvider, useI18n] = constate(() => {\n  const [language, setLanguage] = useLocalStorage(\n    \"language\",\n    languageType[\"ZH-HK\"]\n  );\n  const { i18n } = useTranslation();\n\n  useEffect(() => {\n    i18n.changeLanguage(language);\n  }, [i18n, language]);\n\n  return {\n    language: language || languageType[\"ZH-HK\"],\n    setLanguage,\n  };\n});\n","export default __webpack_public_path__ + \"static/media/crossBlack.aafc0aee.svg\";","import { SHA256 } from \"crypto-js\";\nimport { isEmpty, propOr, trim } from \"ramda\";\n\nimport { languageType } from \"./../constants/languageType\";\nimport { TravelRecord } from \"./../hooks/useTravelRecord\";\n\ntype DecodedJSON = {\n  hash: string;\n  metadata: { typeEn: string; typeZh: string };\n  nameEn: string;\n  nameZh: string;\n  type: string;\n  venueId?: string;\n};\n\nexport type EncodeParam = {\n  typeEn: string;\n  typeZh: string;\n  nameEn: string;\n  nameZh: string;\n  type: string;\n  venueCode: string;\n  venueID: string;\n};\n\nexport type EnhancedEncodeParam = EncodeParam & {\n  addressEn: string;\n  addressZh: string;\n  customImg: string | null;\n};\n\n// https://github.com/aaasssdddwww/back-home-safe/pull/7\nexport const qrDecode = (input: string): DecodedJSON | null => {\n  if (!input.startsWith(\"HKEN:\")) return null;\n  const venueId = input.substring(6, 14);\n  const computedHash = getHash(venueId);\n\n  const base64Data = input.substring(14);\n  const json: DecodedJSON = JSON.parse(\n    decodeURIComponent(escape(window.atob(base64Data)))\n  );\n\n  console.log({\n    input,\n    venueId,\n    decodedData: json,\n    computedHash,\n    hashMatch: computedHash === json.hash,\n  });\n\n  return { ...json, venueId };\n};\n\nexport const getVenueName = (\n  decodedJson: DecodedJSON | TravelRecord | null,\n  language: languageType\n) => {\n  if (!decodedJson) return \"\";\n\n  const trimmedZhName = trim(propOr(\"\", \"nameZh\", decodedJson));\n  const trimmedEnName = trim(propOr(\"\", \"nameEn\", decodedJson));\n  const venueId = trim(propOr(\"\", \"venueId\", decodedJson));\n\n  const chineseName = !isEmpty(trimmedZhName)\n    ? trimmedZhName\n    : !isEmpty(trimmedEnName)\n    ? trimmedEnName\n    : // used for taxi license\n      venueId;\n\n  const englishName = !isEmpty(trimmedEnName)\n    ? trimmedEnName\n    : !isEmpty(trimmedZhName)\n    ? trimmedZhName\n    : // used for taxi license\n      venueId;\n\n  return language === languageType.EN ? englishName : chineseName;\n};\n\n// http://blog.headuck.com/2020/11/19/%e3%80%8c%e5%ae%89%e5%bf%83%e5%87%ba%e8%a1%8c%e3%80%8d%e8%83%bd%e5%90%a6%e5%ae%89%e5%bf%83%e4%bd%bf%e7%94%a8%ef%bc%9f%ef%bc%88%e4%ba%8c%ef%bc%89/?__cf_chl_captcha_tk__=872d5919c48d1b25116c910c9de6c92e2b27facf-1613591353-0-AcPHoKV7LGMua5u8nTgTCYJXS9ZaCBaNSavb3A1E6F6HLsITHuJ9oA-SH4uu4UqnYiphktotJfPYaSUxQSmcfTk6y8iVJb873VgLU0qrdjxU6pZjBx5UxwqLDXom03026Z7EFmoHq70-CVMFVFPdTLHLXkIEYDFHZeqU0RE5KUjOwoJpOIFRLfsXwtRYGefQtspNIySZCg6u5sSDpxdRNc5dpOfdN2dybpb0G5T7j2URLhglnm7gH_chBuLNtSg-awOlrCk7Ljktwxte6lQj6AoNG2Cbqry8_-VvWdPX_1BdDfQ3apJvfUewJ6AIqHfDclXLrRril2vcMckHgrgvATQa4rcOr6AwzaZBcf90sfp3bnNQw59oszIkaV3Dzb8TrJlm4jWq42q3ijXTUua1WKWPDBzDBNl1SjLtar-AI3kzrgwFgaXkWkAxakLyTBJ7wszVHo0DHdCtE_Ozma4VkIZWZSF_gZ3dgBeAbBdwW8XTPsliqfplIeHsML8uJ2dAlxxPIcDDJ7a0gYr2YK4Jdl1ot568DfdMOuzhoMzy2OJKT9YFITl4k0Zger3M5kjSUPjgAOjB4j4p2M6kla2DERXhQj0IRi-sXG92OWEX5-Joa4x41eMqH6X6La4CaSfamwyN3gSwFtBfxvPA2V-Hss3Vj4zEgGs75oxSS7ZrUwbwOORal3VPYiWHzaif0qbWw93UBfuMgfsAyJnvAa5TntFPz3PZqpY9rg6gExJSaKFGBKAnOxyitUe1BDt0rW76u_qay7xF1WlCGCtIasM82E5nF1X51J_sXcAMwmZyG29b\nexport const getHash = (venueId: string) => {\n  const string = `HKEN${venueId}2020`;\n  return SHA256(string).toString();\n};\n\nexport const qrEncode = ({\n  typeEn,\n  typeZh,\n  nameEn,\n  nameZh,\n  type,\n  venueCode,\n  venueID,\n}: EncodeParam) => {\n  const json = {\n    metadata: !isEmpty(typeEn) || !isEmpty(typeZh) ? { typeEn, typeZh } : null,\n    nameZh,\n    nameEn,\n    type,\n    hash: getHash(venueID),\n  };\n\n  const base64Data = window.btoa(\n    unescape(encodeURIComponent(JSON.stringify(json)))\n  );\n\n  return `HKEN:${venueCode}${venueID}${base64Data}`;\n};\n"],"sourceRoot":""}